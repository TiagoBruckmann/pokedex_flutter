// Mocks generated by Mockito 5.4.0 from annotations
// in pokedex/test/data/repositories/pokemon_repo_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:pokedex/data/datasource/pokemon_remote_datasource.dart' as _i4;
import 'package:pokedex/data/models/pokemon_model.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeClient_0 extends _i1.SmartFake implements _i2.Client {
  _FakeClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePokemonModel_1 extends _i1.SmartFake implements _i3.PokemonModel {
  _FakePokemonModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PokemonRemoteDatasourceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockPokemonRemoteDatasourceImpl extends _i1.Mock
    implements _i4.PokemonRemoteDatasourceImpl {
  @override
  _i2.Client get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeClient_0(
          this,
          Invocation.getter(#client),
        ),
        returnValueForMissingStub: _FakeClient_0(
          this,
          Invocation.getter(#client),
        ),
      ) as _i2.Client);
  @override
  _i5.Future<List<_i3.PokemonModel>> getListPokemon() => (super.noSuchMethod(
        Invocation.method(
          #getListPokemon,
          [],
        ),
        returnValue:
            _i5.Future<List<_i3.PokemonModel>>.value(<_i3.PokemonModel>[]),
        returnValueForMissingStub:
            _i5.Future<List<_i3.PokemonModel>>.value(<_i3.PokemonModel>[]),
      ) as _i5.Future<List<_i3.PokemonModel>>);
  @override
  _i5.Future<_i3.PokemonModel> getPokemon(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getPokemon,
          [id],
        ),
        returnValue: _i5.Future<_i3.PokemonModel>.value(_FakePokemonModel_1(
          this,
          Invocation.method(
            #getPokemon,
            [id],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.PokemonModel>.value(_FakePokemonModel_1(
          this,
          Invocation.method(
            #getPokemon,
            [id],
          ),
        )),
      ) as _i5.Future<_i3.PokemonModel>);
}
